{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anche\\\\Desktop\\\\Coding\\\\Cornell\\\\Rocketry\\\\rocketry-web\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../components/Theme';\nimport '../styles/globals.css';\nimport { useRouter } from 'next/router';\nimport * as gtag from '../lib/gtag';\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props; // google analytics\n\n  const router = useRouter();\n  React.useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url);\n    }; //When the component is mounted, subscribe to router changes\n    //and log those page views\n\n\n    router.events.on('routeChangeComplete', handleRouteChange); // If the component is unmounted, unsubscribe\n    // from the event with the `off` method\n\n    return () => {\n      router.events.off('routeChangeComplete', handleRouteChange);\n    };\n  }, [router.events]); // end google analytics\n\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Cornell Rocketry Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/anche/Desktop/Coding/Cornell/Rocketry/rocketry-web/pages/_app.js"],"names":["React","PropTypes","Head","ThemeProvider","CssBaseline","theme","useRouter","gtag","MyApp","props","Component","pageProps","router","useEffect","handleRouteChange","url","pageview","events","on","off","jssStyles","document","querySelector","parentElement","removeChild","propTypes","elementType","isRequired","object"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,uBAAP;AAIA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC,CADmC,CAGnC;;AACA,QAAMG,MAAM,GAAGN,SAAS,EAAxB;AAEAN,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjCR,MAAAA,IAAI,CAACS,QAAL,CAAcD,GAAd;AACD,KAFD,CADoB,CAIpB;AACA;;;AACAH,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCJ,iBAAxC,EANoB,CAQpB;AACA;;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCL,iBAAzC;AACD,KAFD;AAGD,GAbD,EAaG,CAACF,MAAM,CAACK,MAAR,CAbH,EANmC,CAoBnC;;AAGAjB,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMO,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACF,GAND,EAMG,EANH;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEf,KAAtB;AAAA,8BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;AAEDH,KAAK,CAACiB,SAAN,GAAkB;AAChBf,EAAAA,SAAS,EAAET,SAAS,CAACyB,WAAV,CAAsBC,UADjB;AAEhBhB,EAAAA,SAAS,EAAEV,SAAS,CAAC2B,MAAV,CAAiBD;AAFZ,CAAlB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Head from 'next/head';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from '../components/Theme';\r\nimport '../styles/globals.css';\r\n\r\n\r\n\r\nimport { useRouter } from 'next/router'\r\nimport * as gtag from '../lib/gtag'\r\n\r\nexport default function MyApp(props) {\r\n  const { Component, pageProps } = props;\r\n\r\n  // google analytics\r\n  const router = useRouter()\r\n\r\n  React.useEffect(() => {\r\n    const handleRouteChange = (url) => {\r\n      gtag.pageview(url)\r\n    }\r\n    //When the component is mounted, subscribe to router changes\r\n    //and log those page views\r\n    router.events.on('routeChangeComplete', handleRouteChange)\r\n\r\n    // If the component is unmounted, unsubscribe\r\n    // from the event with the `off` method\r\n    return () => {\r\n      router.events.off('routeChangeComplete', handleRouteChange)\r\n    }\r\n  }, [router.events])\r\n  // end google analytics\r\n\r\n\r\n  React.useEffect(() => {\r\n    // Remove the server-side injected CSS.\r\n    const jssStyles = document.querySelector('#jss-server-side');\r\n    if (jssStyles) {\r\n      jssStyles.parentElement.removeChild(jssStyles);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <title>Cornell Rocketry Team</title>\r\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n      </Head>\r\n      <ThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <Component {...pageProps} />\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nMyApp.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  pageProps: PropTypes.object.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}