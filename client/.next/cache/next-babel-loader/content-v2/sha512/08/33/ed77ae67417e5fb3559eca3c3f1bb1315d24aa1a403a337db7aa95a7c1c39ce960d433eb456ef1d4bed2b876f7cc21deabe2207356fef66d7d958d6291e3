{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anche\\\\Desktop\\\\Coding\\\\Cornell\\\\Rocketry\\\\rocketry-web\\\\pages\\\\team.js\";\nimport { useState, useRef, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, Grid, Typography, Container, Hidden, Button, useMediaQuery } from '@material-ui/core';\nimport Header from '../components/layout/Header';\nimport Head from '../components/layout/Head';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nconst useStyles = makeStyles(theme => ({\n  root: {// overflow: 'hidden',\n  },\n  blueprint: {\n    backgroundImage: 'url(\"/static/images/team-page/blueprint/blueprint.svg\")',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    width: '100%',\n    minHeight: '100vh',\n    paddingTop: '12vh',\n    // [theme.breakpoints.only('lg')]: {\n    //   padding: '80px 0 80px 0',\n    // },\n    [theme.breakpoints.down('md')]: {\n      padding: '60px 10px 60px 10px'\n    }\n  },\n  blueprintGrid: {\n    minHeight: '80vh'\n  },\n  blueprintComponent: {\n    margin: '0 10px 0 10px',\n    position: 'relative',\n    zIndex: 3,\n    maxHeight: '40vh',\n    opacity: 0.5,\n    cursor: 'pointer',\n    transition: '200ms',\n    '&:hover': {\n      opacity: 1,\n      transform: 'scale(1.05)'\n    }\n  },\n  recoveryAndBusiness: {\n    margin: '20px 0 20px 0'\n  },\n  blueprintRocket: {\n    position: 'absolute',\n    top: '48%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    height: '75vh'\n  },\n  structures: {\n    maxHeight: '75vh',\n    display: 'block',\n    height: '65%',\n    zIndex: 1,\n    '&:hover': {\n      zIndex: 3\n    }\n  },\n  propulsion: {\n    display: 'block',\n    marginTop: 3,\n    // height: '15.635%', //structures height * the ratio between the svg heights\n    // [theme.breakpoints.down('xs')]: {\n    //   height: '15.56%'\n    // },\n    height: '42.3%',\n    zIndex: 2\n  },\n  viewAll: {\n    marginTop: 22,\n    marginBottom: 5,\n    opacity: 0.75,\n    transform: 'scale(0.9)',\n    cursor: 'pointer',\n    textDecoration: 'underline 1px',\n    textUnderlineOffset: '2px',\n    transition: '200ms',\n    '&:hover': {\n      opacity: 1,\n      transform: 'scale(1)'\n    }\n  },\n  blueprintCircuitBoard: {\n    position: 'relative',\n    height: 300,\n    [theme.breakpoints.down('md')]: {\n      height: 100\n    }\n  },\n  circuitBoardComponent: {\n    position: 'absolute'\n  },\n  dividerLine: {\n    marginTop: 0,\n    color: 'white',\n    backgroundColor: 'white',\n    height: 2,\n    border: 'none' // marginBottom: 12,\n\n  },\n  teamHeading: {\n    color: theme.palette.secondary.main,\n    margin: '40px 0 20px 0'\n  },\n  teamLeadPic: {\n    display: 'block',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: 210\n  },\n  subteam: {\n    marginBottom: 8,\n    color: '#bbbbbb'\n  },\n  subteamLeadPic: {\n    display: 'block',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: 200\n  },\n  name: {\n    marginTop: 8,\n    marginBottom: 8 // whiteSpace: 'nowrap',\n\n  },\n  subteamLeadLabel: {\n    color: '#bbbbbb'\n  }\n}));\nexport default function Team({\n  members,\n  subteamLeads,\n  teamLeads\n}) {\n  const xs = useMediaQuery('(max-width:600px)'); //true for extra small screen sizes\n\n  const classes = useStyles();\n  const divider = useRef();\n  const {\n    0: selectedSubteam,\n    1: setSelectedSubteam\n  } = useState(-1);\n  useEffect(() => {\n    if (selectedSubteam != -1) {\n      const yOffset = !xs ? -80 : -50;\n      const element = divider.current;\n      const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\n      window.scrollTo({\n        top: y,\n        behavior: 'smooth'\n      });\n    }\n  });\n  /*\r\n  -1 - default state, no subteam selected, show team leads and subteam leads\r\n  0 - show all state, show team leads, and all subteams but not subteam leads\r\n  1 - business \r\n  2 - electrical\r\n  3 - embedded software\r\n  4 - propulsion\r\n  5 - recovery & payload\r\n  6 - structures\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blueprint,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        disableGutters: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justify: \"center\",\n          spacing: 0,\n          className: classes.blueprintGrid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            lg: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/team-page/blueprint/recoveryandpayload.svg\",\n              alt: \"Recovery & Payload\",\n              className: clsx(classes.blueprintComponent, classes.recoveryAndBusiness),\n              onClick: () => setSelectedSubteam(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/team-page/blueprint/business.svg\",\n              alt: \"Business\",\n              className: clsx(classes.blueprintComponent, classes.recoveryAndBusiness),\n              onClick: () => setSelectedSubteam(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.blueprintRocket,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: !xs ? '/static/images/team-page/blueprint/newstructures.svg' : '/static/images/team-page/blueprint/newstructures xs.svg',\n                alt: \"Structures\",\n                className: clsx(classes.blueprintComponent, classes.structures),\n                onClick: () => setSelectedSubteam(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: !xs ? '/static/images/team-page/blueprint/newpropulsion.svg' : '/static/images/team-page/blueprint/newpropulsion xs.svg',\n                alt: \"Propulsion\",\n                className: clsx(classes.blueprintComponent, classes.propulsion),\n                onClick: () => setSelectedSubteam(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                align: \"center\",\n                className: classes.viewAll,\n                onClick: () => setSelectedSubteam(0),\n                children: \"VIEW ALL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            lg: 4,\n            className: classes.blueprintCircuitBoard,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/team-page/blueprint/electrical.svg\",\n              alt: \"Electrical\",\n              className: clsx(classes.blueprintComponent, classes.circuitBoardComponent),\n              onClick: () => setSelectedSubteam(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/team-page/blueprint/embeddedsoftware.svg\",\n              alt: \"Embedded Software\",\n              className: clsx(classes.blueprintComponent, classes.circuitBoardComponent),\n              onClick: () => setSelectedSubteam(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      ref: divider,\n      className: classes.dividerLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), (selectedSubteam == -1 || selectedSubteam == 0) && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      className: classes.teamLeadContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        className: classes.teamHeading,\n        children: \"TEAM LEADS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        spacing: 3,\n        children: teamLeads.fileNames.map(name => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: teamLeads.dir + '\\\\' + name,\n            alt: name,\n            className: classes.teamLeadPic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            className: classes.name,\n            children: name.split('.')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), selectedSubteam == -1 && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      className: classes.subteamLeadContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        className: classes.teamHeading,\n        children: \"SUBTEAM LEADS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"space-evenly\",\n        alignItems: \"flex-start\",\n        spacing: 3,\n        children: subteamLeads.map(subteam => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 4,\n          md: 4,\n          lg: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            className: classes.subteam,\n            children: subteam.subteam.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), subteam.fileNames.map(fileName => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: subteam.dir + '\\\\' + fileName,\n              alt: fileName,\n              className: classes.subteamLeadPic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              className: classes.name,\n              children: fileName.split('.')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this)]\n          }, fileName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }, this))]\n        }, subteam, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      className: classes.subteamsContainer,\n      children: members.map((subteam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (selectedSubteam == index + 1 || selectedSubteam == 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            className: classes.teamHeading,\n            children: subteam.subteam.toUpperCase()\n          }, subteam, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justify: \"center\",\n            alignItems: \"flex-start\",\n            spacing: 3,\n            children: [subteamLeads[index].fileNames.map(name => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 4,\n              md: 4,\n              lg: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: subteamLeads[index].dir + '\\\\' + name,\n                alt: name,\n                className: classes.subteamLeadPic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                className: classes.name,\n                children: name.split('.')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                className: classes.subteamLeadLabel,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Subteam Lead\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this)), subteam.fileNames.map(name => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 4,\n              md: 4,\n              lg: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: subteam.dir + '\\\\' + name,\n                alt: name,\n                className: classes.subteamLeadPic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                className: classes.name,\n                children: name.split('.')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, subteam, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const subteams = ['business', 'electrical', 'embedded software', 'propulsion', 'recovery & payload', 'structures'];\n  const teamDirectory = path.join(process.cwd(), 'public/static/images/team-page');\n  const membersImages = subteams.map(async subteam => {\n    var subteamDirectory = path.join(teamDirectory, 'members', subteam);\n    var fileNames = await fs.readdir(subteamDirectory);\n    return {\n      subteam,\n      dir: subteamDirectory.split('public')[1],\n      fileNames\n    };\n  });\n  const subteamLeadImages = subteams.map(async subteam => {\n    var subteamDirectory = path.join(teamDirectory, 'subteam leads', subteam);\n    var fileNames = await fs.readdir(subteamDirectory);\n    return {\n      subteam,\n      dir: subteamDirectory.split('public')[1],\n      fileNames\n    };\n  });\n  const teamLeadDirectory = path.join(teamDirectory, 'team leads');\n  const fileNames = await fs.readdir(teamLeadDirectory);\n  const teamLeadImages = {\n    dir: teamLeadDirectory.split('public')[1],\n    fileNames\n  };\n  return {\n    props: {\n      members: await Promise.all(membersImages),\n      subteamLeads: await Promise.all(subteamLeadImages),\n      teamLeads: teamLeadImages\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/anche/Desktop/Coding/Cornell/Rocketry/rocketry-web/pages/team.js"],"names":["useState","useRef","useEffect","clsx","makeStyles","Grid","Typography","Container","Hidden","Button","useMediaQuery","Header","Head","promises","fs","path","useStyles","theme","root","blueprint","backgroundImage","backgroundPosition","backgroundSize","width","minHeight","paddingTop","breakpoints","down","padding","blueprintGrid","blueprintComponent","margin","position","zIndex","maxHeight","opacity","cursor","transition","transform","recoveryAndBusiness","blueprintRocket","top","left","height","structures","display","propulsion","marginTop","viewAll","marginBottom","textDecoration","textUnderlineOffset","blueprintCircuitBoard","circuitBoardComponent","dividerLine","color","backgroundColor","border","teamHeading","palette","secondary","main","teamLeadPic","maxWidth","subteam","subteamLeadPic","name","subteamLeadLabel","Team","members","subteamLeads","teamLeads","xs","classes","divider","selectedSubteam","setSelectedSubteam","yOffset","element","current","y","getBoundingClientRect","window","pageYOffset","scrollTo","behavior","teamLeadContainer","fileNames","map","dir","split","subteamLeadContainer","toUpperCase","fileName","subteamsContainer","index","getStaticProps","subteams","teamDirectory","join","process","cwd","membersImages","subteamDirectory","readdir","subteamLeadImages","teamLeadDirectory","teamLeadImages","props","Promise","all"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Hidden,\r\n  Button,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport Header from '../components/layout/Header';\r\nimport Head from '../components/layout/Head';\r\n\r\nimport { promises as fs } from 'fs';\r\nimport path from 'path';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // overflow: 'hidden',\r\n  },\r\n  blueprint: {\r\n    backgroundImage: 'url(\"/static/images/team-page/blueprint/blueprint.svg\")',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    paddingTop: '12vh',\r\n    // [theme.breakpoints.only('lg')]: {\r\n    //   padding: '80px 0 80px 0',\r\n    // },\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: '60px 10px 60px 10px',\r\n    },\r\n  },\r\n  blueprintGrid: {\r\n    minHeight: '80vh',\r\n  },\r\n  blueprintComponent: {\r\n    margin: '0 10px 0 10px',\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxHeight: '40vh',\r\n    opacity: 0.5,\r\n    cursor: 'pointer',\r\n    transition: '200ms',\r\n    '&:hover': {\r\n      opacity: 1,\r\n      transform: 'scale(1.05)',\r\n    },\r\n  },\r\n  recoveryAndBusiness: {\r\n    margin: '20px 0 20px 0',\r\n  },\r\n  blueprintRocket: {\r\n    position: 'absolute',\r\n    top: '48%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    height: '75vh',\r\n  },\r\n  structures: {\r\n    maxHeight: '75vh',\r\n    display: 'block',\r\n    height: '65%',\r\n    zIndex: 1,\r\n    '&:hover': {\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  propulsion: {\r\n    display: 'block',\r\n    marginTop: 3,\r\n    // height: '15.635%', //structures height * the ratio between the svg heights\r\n    // [theme.breakpoints.down('xs')]: {\r\n    //   height: '15.56%'\r\n    // },\r\n    height: '42.3%',\r\n    zIndex: 2,\r\n  },\r\n  viewAll: {\r\n    marginTop: 22,\r\n    marginBottom: 5,\r\n    opacity: 0.75,\r\n    transform: 'scale(0.9)',\r\n    cursor: 'pointer',\r\n    textDecoration: 'underline 1px',\r\n    textUnderlineOffset: '2px',\r\n    transition: '200ms',\r\n    '&:hover': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  blueprintCircuitBoard: {\r\n    position: 'relative',\r\n    height: 300,\r\n    [theme.breakpoints.down('md')]: {\r\n      height: 100,\r\n    },\r\n  },\r\n  circuitBoardComponent: {\r\n    position: 'absolute',\r\n  },\r\n  dividerLine: {\r\n    marginTop: 0,\r\n    color: 'white',\r\n    backgroundColor: 'white',\r\n    height: 2,\r\n    border: 'none',\r\n    // marginBottom: 12,\r\n  },\r\n  teamHeading: {\r\n    color: theme.palette.secondary.main,\r\n    margin: '40px 0 20px 0',\r\n  },\r\n  teamLeadPic: {\r\n    display: 'block',\r\n    margin: 'auto',\r\n    width: '100%',\r\n    maxWidth: 210,\r\n  },\r\n  subteam: {\r\n    marginBottom: 8,\r\n    color: '#bbbbbb',\r\n  },\r\n  subteamLeadPic: {\r\n    display: 'block',\r\n    margin: 'auto',\r\n    width: '100%',\r\n    maxWidth: 200,\r\n  },\r\n  name: {\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n    // whiteSpace: 'nowrap',\r\n  },\r\n  subteamLeadLabel: {\r\n    color: '#bbbbbb',\r\n  },\r\n}));\r\n\r\nexport default function Team({ members, subteamLeads, teamLeads }) {\r\n  const xs = useMediaQuery('(max-width:600px)'); //true for extra small screen sizes\r\n  const classes = useStyles();\r\n  const divider = useRef();\r\n\r\n  const [selectedSubteam, setSelectedSubteam] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubteam != -1) {\r\n      const yOffset = !xs ? -80 : -50;\r\n      const element = divider.current;\r\n      const y =\r\n        element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n\r\n      window.scrollTo({ top: y, behavior: 'smooth' });\r\n    }\r\n  });\r\n  /*\r\n  -1 - default state, no subteam selected, show team leads and subteam leads\r\n  0 - show all state, show team leads, and all subteams but not subteam leads\r\n  1 - business \r\n  2 - electrical\r\n  3 - embedded software\r\n  4 - propulsion\r\n  5 - recovery & payload\r\n  6 - structures\r\n */\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <div className={classes.blueprint}>\r\n        <Container maxWidth='lg' disableGutters>\r\n          <Grid\r\n            container\r\n            alignItems='center'\r\n            justify='center'\r\n            spacing={0}\r\n            className={classes.blueprintGrid}\r\n          >\r\n            <Grid item xs={5} lg={4}>\r\n              <img\r\n                src='/static/images/team-page/blueprint/recoveryandpayload.svg'\r\n                alt='Recovery & Payload'\r\n                className={clsx(\r\n                  classes.blueprintComponent,\r\n                  classes.recoveryAndBusiness\r\n                )}\r\n                onClick={() => setSelectedSubteam(5)}\r\n              />\r\n              <img\r\n                src='/static/images/team-page/blueprint/business.svg'\r\n                alt='Business'\r\n                className={clsx(\r\n                  classes.blueprintComponent,\r\n                  classes.recoveryAndBusiness\r\n                )}\r\n                onClick={() => setSelectedSubteam(1)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} lg={4}>\r\n              <div className={classes.blueprintRocket}>\r\n                <img\r\n                  src={\r\n                    !xs\r\n                      ? '/static/images/team-page/blueprint/newstructures.svg'\r\n                      : '/static/images/team-page/blueprint/newstructures xs.svg'\r\n                  }\r\n                  alt='Structures'\r\n                  className={clsx(\r\n                    classes.blueprintComponent,\r\n                    classes.structures\r\n                  )}\r\n                  onClick={() => setSelectedSubteam(6)}\r\n                />\r\n                <img\r\n                  src={\r\n                    !xs\r\n                      ? '/static/images/team-page/blueprint/newpropulsion.svg'\r\n                      : '/static/images/team-page/blueprint/newpropulsion xs.svg'\r\n                  }\r\n                  alt='Propulsion'\r\n                  className={clsx(\r\n                    classes.blueprintComponent,\r\n                    classes.propulsion\r\n                  )}\r\n                  onClick={() => setSelectedSubteam(4)}\r\n                />\r\n                <Typography\r\n                  variant='h5'\r\n                  align='center'\r\n                  className={classes.viewAll}\r\n                  onClick={() => setSelectedSubteam(0)}\r\n                >\r\n                  VIEW ALL\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={5} lg={4} className={classes.blueprintCircuitBoard}>\r\n              <img\r\n                src='/static/images/team-page/blueprint/electrical.svg'\r\n                alt='Electrical'\r\n                className={clsx(\r\n                  classes.blueprintComponent,\r\n                  classes.circuitBoardComponent\r\n                )}\r\n                onClick={() => setSelectedSubteam(2)}\r\n              />\r\n              <img\r\n                src='/static/images/team-page/blueprint/embeddedsoftware.svg'\r\n                alt='Embedded Software'\r\n                className={clsx(\r\n                  classes.blueprintComponent,\r\n                  classes.circuitBoardComponent\r\n                )}\r\n                onClick={() => setSelectedSubteam(3)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n      <hr ref={divider} className={classes.dividerLine} />\r\n\r\n      {(selectedSubteam == -1 || selectedSubteam == 0) && (\r\n        <Container maxWidth='lg' className={classes.teamLeadContainer}>\r\n          <Typography\r\n            variant='h4'\r\n            align='center'\r\n            className={classes.teamHeading}\r\n          >\r\n            TEAM LEADS\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            alignItems='center'\r\n            justify='center'\r\n            alignItems='flex-start'\r\n            spacing={3}\r\n          >\r\n            {teamLeads.fileNames.map((name) => (\r\n              <Grid item sm={4} md={3} key={name}>\r\n                <img\r\n                  src={teamLeads.dir + '\\\\' + name}\r\n                  alt={name}\r\n                  className={classes.teamLeadPic}\r\n                />\r\n                <Typography\r\n                  variant='body1'\r\n                  align='center'\r\n                  className={classes.name}\r\n                >\r\n                  {name.split('.')[0]}\r\n                </Typography>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n\r\n      {selectedSubteam == -1 && (\r\n        <Container maxWidth='lg' className={classes.subteamLeadContainer}>\r\n          <Typography\r\n            variant='h4'\r\n            align='center'\r\n            className={classes.teamHeading}\r\n          >\r\n            SUBTEAM LEADS\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            alignItems='center'\r\n            justify='space-evenly'\r\n            alignItems='flex-start'\r\n            spacing={3}\r\n          >\r\n            {subteamLeads.map((subteam) => (\r\n              <Grid item sm={4} md={4} lg={2} key={subteam}>\r\n                <Typography\r\n                  variant='body1'\r\n                  align='center'\r\n                  className={classes.subteam}\r\n                >\r\n                  {subteam.subteam.toUpperCase()}\r\n                </Typography>\r\n\r\n                {subteam.fileNames.map((fileName) => (\r\n                  <div key={fileName}>\r\n                    <img\r\n                      src={subteam.dir + '\\\\' + fileName}\r\n                      alt={fileName}\r\n                      className={classes.subteamLeadPic}\r\n                    />\r\n                    <Typography\r\n                      variant='body1'\r\n                      align='center'\r\n                      className={classes.name}\r\n                    >\r\n                      {fileName.split('.')[0]}\r\n                    </Typography>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n\r\n      <Container maxWidth='lg' className={classes.subteamsContainer}>\r\n        {members.map((subteam, index) => (\r\n          <div key={subteam}>\r\n            {(selectedSubteam == index + 1 || selectedSubteam == 0) && (\r\n              <>\r\n                <Typography\r\n                  variant='h4'\r\n                  align='center'\r\n                  className={classes.teamHeading}\r\n                  key={subteam}\r\n                >\r\n                  {subteam.subteam.toUpperCase()}\r\n                </Typography>\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  justify='center'\r\n                  alignItems='flex-start'\r\n                  spacing={3}\r\n                >\r\n                  {subteamLeads[index].fileNames.map((name) => (\r\n                    <Grid item sm={4} md={4} lg={2} key={name}>\r\n                      <img\r\n                        src={subteamLeads[index].dir + '\\\\' + name}\r\n                        alt={name}\r\n                        className={classes.subteamLeadPic}\r\n                      />\r\n                      <Typography\r\n                        variant='body1'\r\n                        align='center'\r\n                        className={classes.name}\r\n                      >\r\n                        {name.split('.')[0]}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant='body2'\r\n                        align='center'\r\n                        className={classes.subteamLeadLabel}\r\n                      >\r\n                        <i>Subteam Lead</i>\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  {subteam.fileNames.map((name) => (\r\n                    <Grid item sm={4} md={4} lg={2} key={name}>\r\n                      <img\r\n                        src={subteam.dir + '\\\\' + name}\r\n                        alt={name}\r\n                        className={classes.subteamLeadPic}\r\n                      />\r\n                      <Typography\r\n                        variant='body1'\r\n                        align='center'\r\n                        className={classes.name}\r\n                      >\r\n                        {name.split('.')[0]}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const subteams = [\r\n    'business',\r\n    'electrical',\r\n    'embedded software',\r\n    'propulsion',\r\n    'recovery & payload',\r\n    'structures',\r\n  ];\r\n\r\n  const teamDirectory = path.join(\r\n    process.cwd(),\r\n    'public/static/images/team-page'\r\n  );\r\n\r\n  const membersImages = subteams.map(async (subteam) => {\r\n    var subteamDirectory = path.join(teamDirectory, 'members', subteam);\r\n    var fileNames = await fs.readdir(subteamDirectory);\r\n\r\n    return {\r\n      subteam,\r\n      dir: subteamDirectory.split('public')[1],\r\n      fileNames,\r\n    };\r\n  });\r\n\r\n  const subteamLeadImages = subteams.map(async (subteam) => {\r\n    var subteamDirectory = path.join(teamDirectory, 'subteam leads', subteam);\r\n    var fileNames = await fs.readdir(subteamDirectory);\r\n\r\n    return {\r\n      subteam,\r\n      dir: subteamDirectory.split('public')[1],\r\n      fileNames,\r\n    };\r\n  });\r\n\r\n  const teamLeadDirectory = path.join(teamDirectory, 'team leads');\r\n  const fileNames = await fs.readdir(teamLeadDirectory);\r\n  const teamLeadImages = {\r\n    dir: teamLeadDirectory.split('public')[1],\r\n    fileNames,\r\n  };\r\n\r\n  return {\r\n    props: {\r\n      members: await Promise.all(membersImages),\r\n      subteamLeads: await Promise.all(subteamLeadImages),\r\n      teamLeads: teamLeadImages,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}